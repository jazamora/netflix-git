{"ast":null,"code":"import _classCallCheck from \"/Users/jazamora/dev/netflix/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jazamora/dev/netflix/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jazamora/dev/netflix/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jazamora/dev/netflix/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jazamora/dev/netflix/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jazamora/dev/netflix/src/components/ErrorBoundry.js\";\nimport React from 'react';\n/**\n * Error boundry component to ensure the entire UI doesn't break because of a problem with a component\n */\n\nvar ErrorBoundry =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ErrorBoundry, _React$Component);\n\n  function ErrorBoundry(props) {\n    var _this;\n\n    _classCallCheck(this, ErrorBoundry);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ErrorBoundry).call(this, props));\n    _this.state = {\n      hasError: false\n    };\n    return _this;\n  }\n  /**\n   * Catch any errors for information logging\n   */\n\n\n  _createClass(ErrorBoundry, [{\n    key: \"componentDidCatch\",\n    value: function componentDidCatch()\n    /*error, info*/\n    {\n      this.setState({\n        hasError: true\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.hasError) {\n        return React.createElement(\"div\", {\n          className: \"alert alert-danger\",\n          role: \"alert\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, \"Something went wrong.\"));\n      }\n\n      return this.props.children;\n    }\n  }]);\n\n  return ErrorBoundry;\n}(React.Component);\n\nexport default ErrorBoundry;","map":{"version":3,"sources":["/Users/jazamora/dev/netflix/src/components/ErrorBoundry.js"],"names":["React","ErrorBoundry","props","state","hasError","setState","children","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA;;;;IAGMC,Y;;;;;AACF,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,sFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE;AADD,KAAb;AAHe;AAOlB;AACD;;;;;;;;AAGkB;AAAiB;AAC/B,WAAKC,QAAL,CAAc;AAAED,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACH;;;6BAEQ;AACL,UAAI,KAAKD,KAAL,CAAWC,QAAf,EAAyB;AACrB,eACI;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAoC,UAAA,IAAI,EAAC,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADJ,CADJ;AAKH;;AACD,aAAO,KAAKF,KAAL,CAAWI,QAAlB;AACH;;;;EAzBsBN,KAAK,CAACO,S;;AA4BjC,eAAeN,YAAf","sourcesContent":["import React from 'react';\n\n/**\n * Error boundry component to ensure the entire UI doesn't break because of a problem with a component\n */\nclass ErrorBoundry extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            hasError: false\n        }\n\n    }\n    /**\n     * Catch any errors for information logging\n     */\n    componentDidCatch(/*error, info*/) {\n        this.setState({ hasError: true });\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return (\n                <div className=\"alert alert-danger\" role=\"alert\">\n                    <strong>Something went wrong.</strong>\n                </div>\n            );\n        }\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundry;"]},"metadata":{},"sourceType":"module"}